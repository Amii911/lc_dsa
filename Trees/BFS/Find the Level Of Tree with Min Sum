"""
Given the root of a binary tree root where each node has a value, return the level of the tree that has the minimum sum of values among all the levels (in case of a tie, return the lowest level).

Note that the root of the tree is at level 1 and the level of any other node is its distance from the root + 1.

 

Example 1:

Input: root = [50,6,2,30,80,7]

Output: 2

"""

class Solution:
    def minimumLevel(self, root: Optional[TreeNode]) -> int:
        level_with_minimum = 1
        current_sum = root.val
        current_level = 1
        que = deque([root])
        while len(que) > 0:
            level_sum = 0
            n = len(que)
            for i in range(n):
                node = que.popleft()
                level_sum += node.val
                if node.left:
                    que.append(node.left)
                if node.right:
                    que.append(node.right)
            if level_sum < current_sum:
                level_with_minimum = current_level
                current_sum = level_sum
            current_level += 1
        return level_with_minimum