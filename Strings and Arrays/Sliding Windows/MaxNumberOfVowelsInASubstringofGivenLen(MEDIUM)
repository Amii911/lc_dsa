"""

Given a string s and an integer k, return the maximum number of vowel letters in any substring of s with length k.

Vowel letters in English are 'a', 'e', 'i', 'o', and 'u'.

 

Example 1:

Input: s = "abciiidef", k = 3
Output: 3
Explanation: The substring "iii" contains 3 vowel letters.
Example 2:

Input: s = "aeiou", k = 2
Output: 2
Explanation: Any substring of length 2 contains 2 vowels.
Example 3:

Input: s = "leetcode", k = 3
Output: 2
Explanation: "lee", "eet" and "ode" contain 2 vowels.
 

Constraints:

1 <= s.length <= 105
s consists of lowercase English letters.
1 <= k <= s.length
"""

class Solution:
    def maxVowels(self, s: str, k: int) -> int:
        vowels = ['a', 'e', 'i', 'o', 'u']
        l = 0 
        count = 0 
        ans = 0 

        for r in range(len(s)):
            if s[r] in vowels:
                count += 1

            if r - l + 1 > k:
                if s[l] in vowels:
                    count -= 1
                l += 1

            if r - l + 1 == k:
                ans = max(ans, count)

        return ans
        

"""
return the max num of vowels found in substrings back on len(k)

will be given a str and int
need to return a int

counter for how many vowels are found in the k window

fixed window size

"""