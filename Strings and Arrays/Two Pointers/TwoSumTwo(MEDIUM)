"""
Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Let these two numbers be numbers[index1] and numbers[index2] where 1 <= index1 < index2 <= numbers.length.

Return the indices of the two numbers, index1 and index2, added by one as an integer array [index1, index2] of length 2.

The tests are generated such that there is exactly one solution. You may not use the same element twice.

Your solution must use only constant extra space.

 

Example 1:

Input: numbers = [2,7,11,15], target = 9
Output: [1,2]
Explanation: The
"""
def twoSum(self, numbers: List[int], target: int) -> List[int]:
    index1 = 0
    index2 = len(numbers) - 1

    while index1 < index2:
        if numbers[index1] + numbers[index2] == target:
            return [index1 + 1,index2 + 1]
        elif numbers[index1] + numbers[index2] > target:
            index2 -= 1
        else:
            index1 += 1

    return [-1,-1]